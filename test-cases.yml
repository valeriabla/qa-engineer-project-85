---
- summary: |
    Проверка успешной регистрации пользователя через Email
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте удобным способом
  prerequisites: |
    no-data
  test-data: |
    Email = floral@mail.ru Пароль = 1q2w3e
  steps:
    - Переходим на страницу Sign Up
    - Вводим имя, Email
    - Вводим пароль, подтверждение пароля
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен перейти на главную страницу, в верхнем правом углу отобразится имя пользователя

- summary: |
    Проверка успешной регистрации пользователя через GitHub
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте удобным способом
  prerequisites: |
    no-data
  test-data: |
    Данные реального пользователя GitHub
  steps:
    - Переходим на страницу Sign Up
    - Вводим данные GitHub
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен перейти на главную страницу, в верхнем правом углу отобразится имя пользователя

- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте удобным способом
  prerequisites: |
    no-data
  test-data: |
    Email = floral@mail.ru Пароль = 1q2w3e
  steps:
    - Переходим на страницу Sign in
    - Вводим Email
    - Вводим пароль
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен перейти на главную страницу, в верхнем правом углу отобразится имя пользователя

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте удобным способом
  prerequisites: |
    no-data
  test-data: |
    Email = flora@mail.ru Пароль = 1q2w3e
  steps:
    - Переходим на страницу Sign in
    - Вводим Email
    - Вводим пароль
    - Нажимаем кнопку "Submit"
  expected-result: |
    Должно отобразиться сообщение об ошибке

- summary: |
    Проверка успешного создания новый игры
  requirement: |
    Пользователь должен иметь возможность создать новую игру с возможностью выбора уровня, времени, темы игры, фильтрации тем
  prerequisites: |
    no-data
  test-data: |
    no-data
  steps:
    - На главной странице нажимаем кнопку "Create a game"
    - Выбираеи уровень и тип игры (игра с ботом), время игры, выюираем тему игры или тег
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Пользователь должен перейти на страницу игры с запущенным таймером
 
    - summary: |
    Проверка успешного просмотра обучения в игре
  requirement: |
    Пользователь должен иметь возможность просматривать обучение к игре
  prerequisites: |
    Создана новая игра
  test-data: |
    no-data
  steps:
    - Обучение к игре запускается автоматически, проходим каждый шаг
  expected-result: |
    Пользователь должен увидеть корректное отображение текста в обучении, с корректным указанием кнопок и действий

  - summary: |
    Проверка успешного запуска и прохождения игры
  requirement: |
    Пользователь должен иметь возможность выбирать язык програмирования в игре, видеть код соперника, завершать игру, перезапускать
  prerequisites: |
    Создана новая игра
  test-data: |
    no-data
  steps:
    - Обучение к игре запускается автоматически, проходим каждый шаг
    - После обучния пишем решение к игре
    - Нажимаем кнопку Run
  expected-result: |
    Пользователь должен успешно завершить игру, все кнопки реагируют на действия пользователя

    

    
    

    
